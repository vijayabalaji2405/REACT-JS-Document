{"ast":null,"code":"var _jsxFileName = \"/Users/vijayabalaji/Desktop/challenges/Instagram/instagram/src/components/profile/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer, useEffect } from \"react\";\nimport Header from \"./header\";\nimport Photos from \"./photos\";\nimport { getUserByUsername } from \"../../services/firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst reducer = (state, newState) => ({ ...state,\n  ...newState\n});\n\nconst initialState = {\n  profile: {},\n  photosCollection: [],\n  followerCount: 0\n};\nexport default function Profile(_ref) {\n  _s();\n\n  let {\n    username\n  } = _ref;\n  const [{\n    profile,\n    photosCollection,\n    followerCount\n  }, dispatch] = useReducer(reducer, initialState);\n  useEffect(() => {\n    // think about caching here in localstorage so we don't make a network call we have already made previously (task)\n    async function getProfileInfoAndPhotos() {\n      const [{ ...user\n      }] = await getUserByUsername(username);\n      console.log(user);\n    }\n\n    getProfileInfoAndPhotos();\n  }, [username]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Photos, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Profile, \"eO3VPv4uPCSGb2cy4AJ7awpe8yo=\");\n\n_c = Profile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["/Users/vijayabalaji/Desktop/challenges/Instagram/instagram/src/components/profile/index.js"],"names":["React","useReducer","useEffect","Header","Photos","getUserByUsername","reducer","state","newState","initialState","profile","photosCollection","followerCount","Profile","username","dispatch","getProfileInfoAndPhotos","user","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,QAA6C,OAA7C;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,iBAAT,QAAkC,yBAAlC;;;;AAEA,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,QAAR,MAAsB,EAAE,GAAGD,KAAL;AAAY,KAAGC;AAAf,CAAtB,CAAhB;;AACA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE,EADU;AAEnBC,EAAAA,gBAAgB,EAAE,EAFC;AAGnBC,EAAAA,aAAa,EAAE;AAHI,CAArB;AAMA,eAAe,SAASC,OAAT,OAA+B;AAAA;;AAAA,MAAd;AAAEC,IAAAA;AAAF,GAAc;AAC5C,QAAM,CAAC;AAAEJ,IAAAA,OAAF;AAAWC,IAAAA,gBAAX;AAA6BC,IAAAA;AAA7B,GAAD,EAA+CG,QAA/C,IAA2Dd,UAAU,CACzEK,OADyE,EAEzEG,YAFyE,CAA3E;AAKAP,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,mBAAec,uBAAf,GAAyC;AACvC,YAAM,CAAC,EAAE,GAAGC;AAAL,OAAD,IAAgB,MAAMZ,iBAAiB,CAACS,QAAD,CAA7C;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACD;;AACDD,IAAAA,uBAAuB;AACxB,GAPQ,EAON,CAACF,QAAD,CAPM,CAAT;AASA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAMD;;GArBuBD,O;;KAAAA,O","sourcesContent":["import React, { useReducer, useEffect } from \"react\";\nimport Header from \"./header\";\nimport Photos from \"./photos\";\nimport { getUserByUsername } from \"../../services/firebase\";\n\nconst reducer = (state, newState) => ({ ...state, ...newState });\nconst initialState = {\n  profile: {},\n  photosCollection: [],\n  followerCount: 0,\n};\n\nexport default function Profile({ username }) {\n  const [{ profile, photosCollection, followerCount }, dispatch] = useReducer(\n    reducer,\n    initialState\n  );\n\n  useEffect(() => {\n    // think about caching here in localstorage so we don't make a network call we have already made previously (task)\n    async function getProfileInfoAndPhotos() {\n      const [{ ...user }] = await getUserByUsername(username);\n      console.log(user);\n    }\n    getProfileInfoAndPhotos();\n  }, [username]);\n\n  return (\n    <>\n      <Header />\n      <Photos />\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}