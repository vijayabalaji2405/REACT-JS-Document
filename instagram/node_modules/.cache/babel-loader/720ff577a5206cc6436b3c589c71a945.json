{"ast":null,"code":"var _jsxFileName = \"/Users/vijayabalaji/Desktop/challenges/Instagram/instagram/src/components/post/comments.js\",\n    _s2 = $RefreshSig$();\n\n// import React, { useState } from \"react\";\n// import { formatDistance } from \"date-fns\";\n// import { Link } from \"react-router-dom\";\n// import AddComment from \"./add-comment\";\n// export default function Comments({\n//   docId,\n//   comments: allComments,\n//   posted,\n//   commentInput,\n// }) {\n//   const [comments, setComments] = useState(allComments);\n//   return (\n//     <>\n//       <div className=\"p-4 pt-1 pb-4\">\n//         {comments.length >= 3 && (\n//           <p className=\"text-sm text-gray-500 mb-1 cursor-pointer\">\n//             View all {comments.length} comments\n//           </p>\n//         )}\n//         {comments.slice(0, 3).map((item) => (\n//           <p key={`${item.comment}-${item.displayName}`} className=\"mb-1\">\n//             <Link to={`/p/${item.displayName}`}>\n//               <span className=\"mr-1 font-bold\">{item.displayName}</span>\n//             </Link>\n//             <span>{item.comment}</span>\n//           </p>\n//         ))}\n//         <p className=\"text-gray uppercase text-xs mt-2\">\n//           {formatDistance(posted, new Date())} ago\n//         </p>\n//       </div>\n//       <AddComment\n//         docId={docId}\n//         comments={comments}\n//         setComments={setComments}\n//         commentInput={commentInput}\n//       />\n//     </>\n//   );\n// }\n// import React, { useState } from \"react\";\n// import { formatDistance } from \"date-fns\";\n// import { Link } from \"react-router-dom\";\n// import AddComment from \"./add-comment\";\n// export default function Comments({\n//   docId,\n//   comments: allComments,\n//   posted,\n//   commentInput,\n// }) {\n//   const [comments, setComments] = useState(allComments);\n//   const [showing, setShowing] = useState(false);\n//   function Comment({ showing }) {\n//     return (\n//       <>\n//         {!showing ? (\n//           <>\n//             {comments.slice(0, 3).map((item) => (\n//               <p key={`${item.comment}-${item.displayName}`} className=\"mb-1\">\n//                 <Link to={`/p/${item.displayName}`}>\n//                   <span className=\"mr-1 font-bold\">{item.displayName}</span>\n//                 </Link>\n//                 <span>{item.comment}</span>\n//               </p>\n//             ))}\n//           </>\n//         ) : (\n//           <>\n//             {comments.map((item) => (\n//               <p key={`${item.comment}-${item.displayName}`} className=\"mb-1\">\n//                 <Link to={`/p/${item.displayName}`}>\n//                   <span className=\"mr-1 font-bold\">{item.displayName}</span>\n//                 </Link>\n//                 <span>{item.comment}</span>\n//               </p>\n//             ))}\n//           </>\n//         )}\n//       </>\n//     );\n//   }\n//   return (\n//     <>\n//       <div className=\"p-4 pt-1 pb-4\">\n//         {comments.length >= 3 && (\n//           <p\n//             className=\"text-sm text-gray-500 mb-1 cursor-pointer\"\n//             onClick={() => {\n//               setShowing(!showing);\n//             }}\n//           >\n//             View all {comments.length} comments\n//           </p>\n//         )}\n//         <Comment showing={showing} />\n//         <p className=\"text-gray uppercase text-xs mt-2\">\n//           {formatDistance(posted, new Date())} ago\n//         </p>\n//       </div>\n//       <AddComment\n//         docId={docId}\n//         comments={comments}\n//         setComments={setComments}\n//         commentInput={commentInput}\n//       />\n//     </>\n//   );\n// }\nimport React, { useState } from \"react\";\nimport { formatDistance } from \"date-fns\";\nimport { Link } from \"react-router-dom\";\nimport AddComment from \"./add-comment\";\nimport \"./comments.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Comments(_ref) {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  let {\n    docId,\n    comments: allComments,\n    posted,\n    commentInput,\n    content\n  } = _ref;\n  const [comments, setComments] = useState(allComments);\n  const [showing, setShowing] = useState(false);\n\n  function Image(_ref2) {\n    let {\n      src,\n      caption\n    } = _ref2;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"imgdiv\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: src,\n        alt: caption,\n        className: \"img\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this);\n  }\n\n  function Comment(_ref3) {\n    _s();\n\n    let {\n      showing\n    } = _ref3;\n    const [showing1, setshowing1] = useState(showing);\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: !showing1 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: comments.slice(0, 3).map(item => /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mb-1\",\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: `/p/${item.displayName}`,\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"mr-1 font-bold\",\n              children: item.displayName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: item.comment\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 17\n          }, this)]\n        }, `${item.comment}-${item.displayName}`, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 15\n        }, this))\n      }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"image\",\n            children: /*#__PURE__*/_jsxDEV(Image, {\n              src: content.imageSrc,\n              caption: content.caption\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"x\",\n            onClick: () => {\n              setShowing(!showing);\n            },\n            children: \"\\u274C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sidecomment\",\n            children: comments.map(item => /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"mb-1\",\n              children: [/*#__PURE__*/_jsxDEV(Link, {\n                to: `/p/${item.displayName}`,\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"name\",\n                  children: [item.displayName, \":\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 172,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"comm\",\n                children: item.comment\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 21\n              }, this)]\n            }, `${item.comment}-${item.displayName}`, true, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 13\n        }, this)\n      }, void 0, false)\n    }, void 0, false);\n  }\n\n  _s(Comment, \"p5p+3K9uMI0xbCR2tDV10gjmjoU=\");\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-4 pt-1 pb-4\",\n      children: [comments.length >= 3 && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-sm text-gray-500 mb-1 cursor-pointer\",\n        onClick: () => {\n          setShowing(!showing);\n        },\n        children: [\"View all \", comments.length, \" comments\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Comment, {\n        showing: showing\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray uppercase text-xs mt-2\",\n        children: [formatDistance(posted, new Date()), \" ago\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddComment, {\n      docId: docId,\n      comments: comments,\n      setComments: setComments,\n      commentInput: commentInput\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s2(Comments, \"7/a+KgU4aPFAbhPacAKUN5GcxI4=\");\n\n_c = Comments;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"sources":["/Users/vijayabalaji/Desktop/challenges/Instagram/instagram/src/components/post/comments.js"],"names":["React","useState","formatDistance","Link","AddComment","Comments","docId","comments","allComments","posted","commentInput","content","setComments","showing","setShowing","Image","src","caption","Comment","showing1","setshowing1","slice","map","item","displayName","comment","imageSrc","length","Date"],"mappingsgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,cAAT,QAA+B,UAA/B;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,OAAO,gBAAP;;;AACA,eAAe,SAASC,QAAT,OAMZ;AAAA;;AAAA;;AAAA,MAN8B;AAC/BC,IAAAA,KAD+B;AAE/BC,IAAAA,QAAQ,EAAEC,WAFqB;AAG/BC,IAAAA,MAH+B;AAI/BC,IAAAA,YAJ+B;AAK/BC,IAAAA;AAL+B,GAM9B;AACD,QAAM,CAACJ,QAAD,EAAWK,WAAX,IAA0BX,QAAQ,CAACO,WAAD,CAAxC;AACA,QAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,KAAD,CAAtC;;AACA,WAASc,KAAT,QAAiC;AAAA,QAAlB;AAAEC,MAAAA,GAAF;AAAOC,MAAAA;AAAP,KAAkB;AAC/B,wBACE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,6BACE;AAAK,QAAA,GAAG,EAAED,GAAV;AAAe,QAAA,GAAG,EAAEC,OAApB;AAA6B,QAAA,SAAS,EAAC;AAAvC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AACD,WAASC,OAAT,QAA8B;AAAA;;AAAA,QAAb;AAAEL,MAAAA;AAAF,KAAa;AAC5B,UAAM,CAACM,QAAD,EAAWC,WAAX,IAA0BnB,QAAQ,CAACY,OAAD,CAAxC;AACA,wBACE;AAAA,gBACG,CAACM,QAAD,gBACC;AAAA,kBACGZ,QAAQ,CAACc,KAAT,CAAe,CAAf,EAAkB,CAAlB,EAAqBC,GAArB,CAA0BC,IAAD,iBACxB;AAA+C,UAAA,SAAS,EAAC,MAAzD;AAAA,kCACE,QAAC,IAAD;AAAM,YAAA,EAAE,EAAG,MAAKA,IAAI,CAACC,WAAY,EAAjC;AAAA,mCACE;AAAM,cAAA,SAAS,EAAC,gBAAhB;AAAA,wBAAkCD,IAAI,CAACC;AAAvC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE;AAAA,sBAAOD,IAAI,CAACE;AAAZ;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA,WAAS,GAAEF,IAAI,CAACE,OAAQ,IAAGF,IAAI,CAACC,WAAY,EAA5C;AAAA;AAAA;AAAA;AAAA,gBADD;AADH,uBADD,gBAYC;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,OAAf;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC,OAAf;AAAA,mCACE,QAAC,KAAD;AAAO,cAAA,GAAG,EAAEb,OAAO,CAACe,QAApB;AAA8B,cAAA,OAAO,EAAEf,OAAO,CAACM;AAA/C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE;AACE,YAAA,SAAS,EAAC,GADZ;AAEE,YAAA,OAAO,EAAE,MAAM;AACbH,cAAAA,UAAU,CAAC,CAACD,OAAF,CAAV;AACD,aAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF,eAYE;AAAK,YAAA,SAAS,EAAC,aAAf;AAAA,sBACGN,QAAQ,CAACe,GAAT,CAAcC,IAAD,iBACZ;AAEE,cAAA,SAAS,EAAC,MAFZ;AAAA,sCAIE,QAAC,IAAD;AAAM,gBAAA,EAAE,EAAG,MAAKA,IAAI,CAACC,WAAY,EAAjC;AAAA,uCACE;AAAM,kBAAA,SAAS,EAAC,MAAhB;AAAA,6BAAwBD,IAAI,CAACC,WAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBAJF,eAOE;AAAM,gBAAA,SAAS,EAAC,MAAhB;AAAA,0BAAwBD,IAAI,CAACE;AAA7B;AAAA;AAAA;AAAA;AAAA,sBAPF;AAAA,eACQ,GAAEF,IAAI,CAACE,OAAQ,IAAGF,IAAI,CAACC,WAAY,EAD3C;AAAA;AAAA;AAAA;AAAA,oBADD;AADH;AAAA;AAAA;AAAA;AAAA,kBAZF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAbJ,qBADF;AA6CD;;AAzDA,KAUQN,OAVR;;AA2DD,sBACE;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,iBACGX,QAAQ,CAACoB,MAAT,IAAmB,CAAnB,iBACC;AACE,QAAA,SAAS,EAAC,2CADZ;AAEE,QAAA,OAAO,EAAE,MAAM;AACbb,UAAAA,UAAU,CAAC,CAACD,OAAF,CAAV;AACD,SAJH;AAAA,gCAMYN,QAAQ,CAACoB,MANrB;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAWE,QAAC,OAAD;AAAS,QAAA,OAAO,EAAEd;AAAlB;AAAA;AAAA;AAAA;AAAA,cAXF,eAYE;AAAG,QAAA,SAAS,EAAC,kCAAb;AAAA,mBACGX,cAAc,CAACO,MAAD,EAAS,IAAImB,IAAJ,EAAT,CADjB;AAAA;AAAA;AAAA;AAAA;AAAA,cAZF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAiBE,QAAC,UAAD;AACE,MAAA,KAAK,EAAEtB,KADT;AAEE,MAAA,QAAQ,EAAEC,QAFZ;AAGE,MAAA,WAAW,EAAEK,WAHf;AAIE,MAAA,YAAY,EAAEF;AAJhB;AAAA;AAAA;AAAA;AAAA,YAjBF;AAAA,kBADF;AA0BD;;IA3FuBL,Q;;KAAAA,Q","sourcesContent":["// import React, { useState } from \"react\";\n// import { formatDistance } from \"date-fns\";\n// import { Link } from \"react-router-dom\";\n// import AddComment from \"./add-comment\";\n\n// export default function Comments({\n//   docId,\n//   comments: allComments,\n//   posted,\n//   commentInput,\n// }) {\n//   const [comments, setComments] = useState(allComments);\n\n//   return (\n//     <>\n//       <div className=\"p-4 pt-1 pb-4\">\n//         {comments.length >= 3 && (\n//           <p className=\"text-sm text-gray-500 mb-1 cursor-pointer\">\n//             View all {comments.length} comments\n//           </p>\n//         )}\n//         {comments.slice(0, 3).map((item) => (\n//           <p key={`${item.comment}-${item.displayName}`} className=\"mb-1\">\n//             <Link to={`/p/${item.displayName}`}>\n//               <span className=\"mr-1 font-bold\">{item.displayName}</span>\n//             </Link>\n//             <span>{item.comment}</span>\n//           </p>\n//         ))}\n//         <p className=\"text-gray uppercase text-xs mt-2\">\n//           {formatDistance(posted, new Date())} ago\n//         </p>\n//       </div>\n//       <AddComment\n//         docId={docId}\n//         comments={comments}\n//         setComments={setComments}\n//         commentInput={commentInput}\n//       />\n//     </>\n//   );\n// }\n\n// import React, { useState } from \"react\";\n// import { formatDistance } from \"date-fns\";\n// import { Link } from \"react-router-dom\";\n// import AddComment from \"./add-comment\";\n\n// export default function Comments({\n//   docId,\n//   comments: allComments,\n//   posted,\n//   commentInput,\n// }) {\n//   const [comments, setComments] = useState(allComments);\n//   const [showing, setShowing] = useState(false);\n//   function Comment({ showing }) {\n//     return (\n//       <>\n//         {!showing ? (\n//           <>\n//             {comments.slice(0, 3).map((item) => (\n//               <p key={`${item.comment}-${item.displayName}`} className=\"mb-1\">\n//                 <Link to={`/p/${item.displayName}`}>\n//                   <span className=\"mr-1 font-bold\">{item.displayName}</span>\n//                 </Link>\n//                 <span>{item.comment}</span>\n//               </p>\n//             ))}\n//           </>\n//         ) : (\n//           <>\n//             {comments.map((item) => (\n//               <p key={`${item.comment}-${item.displayName}`} className=\"mb-1\">\n//                 <Link to={`/p/${item.displayName}`}>\n//                   <span className=\"mr-1 font-bold\">{item.displayName}</span>\n//                 </Link>\n//                 <span>{item.comment}</span>\n//               </p>\n//             ))}\n//           </>\n//         )}\n//       </>\n//     );\n//   }\n\n//   return (\n//     <>\n//       <div className=\"p-4 pt-1 pb-4\">\n//         {comments.length >= 3 && (\n//           <p\n//             className=\"text-sm text-gray-500 mb-1 cursor-pointer\"\n//             onClick={() => {\n//               setShowing(!showing);\n//             }}\n//           >\n//             View all {comments.length} comments\n//           </p>\n//         )}\n//         <Comment showing={showing} />\n\n//         <p className=\"text-gray uppercase text-xs mt-2\">\n//           {formatDistance(posted, new Date())} ago\n//         </p>\n//       </div>\n//       <AddComment\n//         docId={docId}\n//         comments={comments}\n//         setComments={setComments}\n//         commentInput={commentInput}\n//       />\n//     </>\n//   );\n// }\nimport React, { useState } from \"react\";\nimport { formatDistance } from \"date-fns\";\nimport { Link } from \"react-router-dom\";\nimport AddComment from \"./add-comment\";\nimport \"./comments.css\";\nexport default function Comments({\n  docId,\n  comments: allComments,\n  posted,\n  commentInput,\n  content,\n}) {\n  const [comments, setComments] = useState(allComments);\n  const [showing, setShowing] = useState(false);\n  function Image({ src, caption }) {\n    return (\n      <div className=\"imgdiv\">\n        <img src={src} alt={caption} className=\"img\" />\n      </div>\n    );\n  }\n  function Comment({ showing }) {\n    const [showing1, setshowing1] = useState(showing);\n    return (\n      <>\n        {!showing1 ? (\n          <>\n            {comments.slice(0, 3).map((item) => (\n              <p key={`${item.comment}-${item.displayName}`} className=\"mb-1\">\n                <Link to={`/p/${item.displayName}`}>\n                  <span className=\"mr-1 font-bold\">{item.displayName}</span>\n                </Link>\n                <span>{item.comment}</span>\n              </p>\n            ))}\n          </>\n        ) : (\n          <>\n            <div className=\"modal\">\n              <div className=\"image\">\n                <Image src={content.imageSrc} caption={content.caption} />\n              </div>\n              <div\n                className=\"x\"\n                onClick={() => {\n                  setShowing(!showing);\n                }}\n              >\n                ❌\n              </div>\n              <div className=\"sidecomment\">\n                {comments.map((item) => (\n                  <p\n                    key={`${item.comment}-${item.displayName}`}\n                    className=\"mb-1\"\n                  >\n                    <Link to={`/p/${item.displayName}`}>\n                      <span className=\"name\">{item.displayName}:</span>\n                    </Link>\n                    <span className=\"comm\">{item.comment}</span>\n                  </p>\n                ))}\n              </div>\n            </div>\n          </>\n        )}\n      </>\n    );\n  }\n\n  return (\n    <>\n      <div className=\"p-4 pt-1 pb-4\">\n        {comments.length >= 3 && (\n          <p\n            className=\"text-sm text-gray-500 mb-1 cursor-pointer\"\n            onClick={() => {\n              setShowing(!showing);\n            }}\n          >\n            View all {comments.length} comments\n          </p>\n        )}\n        <Comment showing={showing} />\n        <p className=\"text-gray uppercase text-xs mt-2\">\n          {formatDistance(posted, new Date())} ago\n        </p>\n      </div>\n      <AddComment\n        docId={docId}\n        comments={comments}\n        setComments={setComments}\n        commentInput={commentInput}\n      />\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}