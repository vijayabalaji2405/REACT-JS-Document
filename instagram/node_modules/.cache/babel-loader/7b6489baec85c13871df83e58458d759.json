{"ast":null,"code":"var _jsxFileName = \"/Users/vijayabalaji/Desktop/challenges/Instagram/instagram/src/components/post/comments.js\",\n    _s = $RefreshSig$();\n\n// import React, { useState } from \"react\";\n// import { formatDistance } from \"date-fns\";\n// import { Link } from \"react-router-dom\";\n// import AddComment from \"./add-comment\";\n// export default function Comments({\n//   docId,\n//   comments: allComments,\n//   posted,\n//   commentInput,\n// }) {\n//   const [comments, setComments] = useState(allComments);\n//   // console.log(allComments);\n//   return (\n//     <>\n//       <div className=\"p-4 pt-1 pb-4\">\n//         {comments.length >= 3 && (\n//           <p className=\"text-sm text-gray-500 mb-1 cursor-pointer\">\n//             View all {comments.length} comments\n//           </p>\n//         )}\n//         {comments.slice(0, 3).map((item) => (\n//           <p key={`${item.comment}-${item.displayName}`} className=\"mb-1\">\n//             <Link to={`/p/${item.displayName}`}>\n//               <span className=\"mr-1 font-bold\">{item.displayName}</span>\n//             </Link>\n//             <span>{item.comment}</span>\n//           </p>\n//         ))}\n//         <p className=\"text-gray uppercase text-xs mt-2\">\n//           {formatDistance(posted, new Date())} ago\n//         </p>\n//       </div>\n//       <AddComment\n//         docId={docId}\n//         comments={comments}\n//         setComments={setComments}\n//         commentInput={commentInput}\n//       />\n//     </>\n//   );\n// }\nimport React, { useState } from \"react\";\nimport { formatDistance } from \"date-fns\";\nimport { Link } from \"react-router-dom\";\nimport AddComment from \"./add-comment\"; // function Comment({ showing }) {\n//   return (\n//     <>\n//       {!showing ? (\n//         <>\n//           {comments.slice(0, 3).map((item) => (\n//             <p key={`${item.comment}-${item.displayName}`} className=\"mb-1\">\n//               <Link to={`/p/${item.displayName}`}>\n//                 <span className=\"mr-1 font-bold\">{item.displayName}</span>\n//               </Link>\n//               <span>{item.comment}</span>\n//             </p>\n//           ))}\n//         </>\n//       ) : (\n//         <>\n//           {comments.map((item) => (\n//             <p key={`${item.comment}-${item.displayName}`} className=\"mb-1\">\n//               <Link to={`/p/${item.displayName}`}>\n//                 <span className=\"mr-1 font-bold\">{item.displayName}</span>\n//               </Link>\n//               <span>{item.comment}</span>\n//             </p>\n//           ))}\n//         </>\n//       )}\n//     </>\n//   );\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Comments(_ref) {\n  _s();\n\n  let {\n    docId,\n    comments: allComments,\n    posted,\n    commentInput\n  } = _ref;\n  const [comments, setComments] = useState(allComments);\n  let showing = false;\n\n  function Comment(_ref2) {\n    let {\n      showing\n    } = _ref2;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: !showing ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: comments.slice(0, 3).map(item => /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mb-1\",\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: `/p/${item.displayName}`,\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"mr-1 font-bold\",\n              children: item.displayName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: item.comment\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"heksdkjskd\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 17\n          }, this)]\n        }, `${item.comment}-${item.displayName}`, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 15\n        }, this))\n      }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: comments.map(item => /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mb-1\",\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: `/p/${item.displayName}`,\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"mr-1 font-bold\",\n              children: item.displayName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: item.comment\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 17\n          }, this)]\n        }, `${item.comment}-${item.displayName}`, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 15\n        }, this))\n      }, void 0, false)\n    }, void 0, false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-4 pt-1 pb-4\",\n      children: [comments.length >= 3 && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-sm text-gray-500 mb-1 cursor-pointer\",\n        onClick: () => {\n          showing = !showing;\n        },\n        children: [\"View all \", comments.length, \" comments\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Comment, {\n        showing: showing\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray uppercase text-xs mt-2\",\n        children: [formatDistance(posted, new Date()), \" ago\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddComment, {\n      docId: docId,\n      comments: comments,\n      setComments: setComments,\n      commentInput: commentInput\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Comments, \"LZlRtg2lM50mDVof2df2hoSAhCQ=\");\n\n_c = Comments;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"sources":["/Users/vijayabalaji/Desktop/challenges/Instagram/instagram/src/components/post/comments.js"],"names":["React","useState","formatDistance","Link","AddComment","Comments","docId","comments","allComments","posted","commentInput","setComments","showing","Comment","slice","map","item","displayName","comment","length","Date"],"mappings":"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","sourcesContent":["// import React, { useState } from \"react\";\n// import { formatDistance } from \"date-fns\";\n// import { Link } from \"react-router-dom\";\n// import AddComment from \"./add-comment\";\n\n// export default function Comments({\n//   docId,\n//   comments: allComments,\n//   posted,\n//   commentInput,\n// }) {\n//   const [comments, setComments] = useState(allComments);\n//   // console.log(allComments);\n\n//   return (\n//     <>\n//       <div className=\"p-4 pt-1 pb-4\">\n//         {comments.length >= 3 && (\n//           <p className=\"text-sm text-gray-500 mb-1 cursor-pointer\">\n//             View all {comments.length} comments\n//           </p>\n//         )}\n//         {comments.slice(0, 3).map((item) => (\n//           <p key={`${item.comment}-${item.displayName}`} className=\"mb-1\">\n//             <Link to={`/p/${item.displayName}`}>\n//               <span className=\"mr-1 font-bold\">{item.displayName}</span>\n//             </Link>\n//             <span>{item.comment}</span>\n//           </p>\n//         ))}\n//         <p className=\"text-gray uppercase text-xs mt-2\">\n//           {formatDistance(posted, new Date())} ago\n//         </p>\n//       </div>\n//       <AddComment\n//         docId={docId}\n//         comments={comments}\n//         setComments={setComments}\n//         commentInput={commentInput}\n//       />\n//     </>\n//   );\n// }\n\nimport React, { useState } from \"react\";\nimport { formatDistance } from \"date-fns\";\nimport { Link } from \"react-router-dom\";\nimport AddComment from \"./add-comment\";\n\n// function Comment({ showing }) {\n//   return (\n//     <>\n//       {!showing ? (\n//         <>\n//           {comments.slice(0, 3).map((item) => (\n//             <p key={`${item.comment}-${item.displayName}`} className=\"mb-1\">\n//               <Link to={`/p/${item.displayName}`}>\n//                 <span className=\"mr-1 font-bold\">{item.displayName}</span>\n//               </Link>\n//               <span>{item.comment}</span>\n//             </p>\n//           ))}\n//         </>\n//       ) : (\n//         <>\n//           {comments.map((item) => (\n//             <p key={`${item.comment}-${item.displayName}`} className=\"mb-1\">\n//               <Link to={`/p/${item.displayName}`}>\n//                 <span className=\"mr-1 font-bold\">{item.displayName}</span>\n//               </Link>\n//               <span>{item.comment}</span>\n//             </p>\n//           ))}\n//         </>\n//       )}\n//     </>\n//   );\n// }\n\nexport default function Comments({\n  docId,\n  comments: allComments,\n  posted,\n  commentInput,\n}) {\n  const [comments, setComments] = useState(allComments);\n  let showing = false;\n  function Comment({ showing }) {\n    return (\n      <>\n        {!showing ? (\n          <>\n            {comments.slice(0, 3).map((item) => (\n              <p key={`${item.comment}-${item.displayName}`} className=\"mb-1\">\n                <Link to={`/p/${item.displayName}`}>\n                  <span className=\"mr-1 font-bold\">{item.displayName}</span>\n                </Link>\n                <span>{item.comment}</span>\n                <p>heksdkjskd</p>\n              </p>\n            ))}\n          </>\n        ) : (\n          <>\n            {comments.map((item) => (\n              <p key={`${item.comment}-${item.displayName}`} className=\"mb-1\">\n                <Link to={`/p/${item.displayName}`}>\n                  <span className=\"mr-1 font-bold\">{item.displayName}</span>\n                </Link>\n                <span>{item.comment}</span>\n              </p>\n            ))}\n          </>\n        )}\n      </>\n    );\n  }\n\n  return (\n    <>\n      <div className=\"p-4 pt-1 pb-4\">\n        {comments.length >= 3 && (\n          <p\n            className=\"text-sm text-gray-500 mb-1 cursor-pointer\"\n            onClick={() => {\n              showing = !showing;\n            }}\n          >\n            View all {comments.length} comments\n          </p>\n        )}\n        <Comment showing={showing} />\n\n        <p className=\"text-gray uppercase text-xs mt-2\">\n          {formatDistance(posted, new Date())} ago\n        </p>\n      </div>\n      <AddComment\n        docId={docId}\n        comments={comments}\n        setComments={setComments}\n        commentInput={commentInput}\n      />\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}