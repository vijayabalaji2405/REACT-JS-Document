{"ast":null,"code":"var _jsxFileName = \"/Users/vijayabalaji/Desktop/challenges/Instagram/instagram/src/components/post/comments.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\n// import React, { useState } from \"react\";\n// import { formatDistance } from \"date-fns\";\n// import { Link } from \"react-router-dom\";\n// import AddComment from \"./add-comment\";\n// export default function Comments({\n//   docId,\n//   comments: allComments,\n//   posted,\n//   commentInput,\n// }) {\n//   const [comments, setComments] = useState(allComments);\n//   return (\n//     <>\n//       <div className=\"p-4 pt-1 pb-4\">\n//         {comments.length >= 3 && (\n//           <p className=\"text-sm text-gray-500 mb-1 cursor-pointer\">\n//             View all {comments.length} comments\n//           </p>\n//         )}\n//         {comments.slice(0, 3).map((item) => (\n//           <p key={`${item.comment}-${item.displayName}`} className=\"mb-1\">\n//             <Link to={`/p/${item.displayName}`}>\n//               <span className=\"mr-1 font-bold\">{item.displayName}</span>\n//             </Link>\n//             <span>{item.comment}</span>\n//           </p>\n//         ))}\n//         <p className=\"text-gray uppercase text-xs mt-2\">\n//           {formatDistance(posted, new Date())} ago\n//         </p>\n//       </div>\n//       <AddComment\n//         docId={docId}\n//         comments={comments}\n//         setComments={setComments}\n//         commentInput={commentInput}\n//       />\n//     </>\n//   );\n// }\n// import React, { useState } from \"react\";\n// import { formatDistance } from \"date-fns\";\n// import { Link } from \"react-router-dom\";\n// import AddComment from \"./add-comment\";\n// export default function Comments({\n//   docId,\n//   comments: allComments,\n//   posted,\n//   commentInput,\n// }) {\n//   const [comments, setComments] = useState(allComments);\n//   const [showing, setShowing] = useState(false);\n//   function Comment({ showing }) {\n//     return (\n//       <>\n//         {!showing ? (\n//           <>\n//             {comments.slice(0, 3).map((item) => (\n//               <p key={`${item.comment}-${item.displayName}`} className=\"mb-1\">\n//                 <Link to={`/p/${item.displayName}`}>\n//                   <span className=\"mr-1 font-bold\">{item.displayName}</span>\n//                 </Link>\n//                 <span>{item.comment}</span>\n//               </p>\n//             ))}\n//           </>\n//         ) : (\n//           <>\n//             {comments.map((item) => (\n//               <p key={`${item.comment}-${item.displayName}`} className=\"mb-1\">\n//                 <Link to={`/p/${item.displayName}`}>\n//                   <span className=\"mr-1 font-bold\">{item.displayName}</span>\n//                 </Link>\n//                 <span>{item.comment}</span>\n//               </p>\n//             ))}\n//           </>\n//         )}\n//       </>\n//     );\n//   }\n//   return (\n//     <>\n//       <div className=\"p-4 pt-1 pb-4\">\n//         {comments.length >= 3 && (\n//           <p\n//             className=\"text-sm text-gray-500 mb-1 cursor-pointer\"\n//             onClick={() => {\n//               setShowing(!showing);\n//             }}\n//           >\n//             View all {comments.length} comments\n//           </p>\n//         )}\n//         <Comment showing={showing} />\n//         <p className=\"text-gray uppercase text-xs mt-2\">\n//           {formatDistance(posted, new Date())} ago\n//         </p>\n//       </div>\n//       <AddComment\n//         docId={docId}\n//         comments={comments}\n//         setComments={setComments}\n//         commentInput={commentInput}\n//       />\n//     </>\n//   );\n// }\n// import React, { useState } from \"react\";\n// import { formatDistance } from \"date-fns\";\n// import { Link } from \"react-router-dom\";\n// import AddComment from \"./add-comment\";\n// import \"./comments.css\";\n// export default function Comments({\n//   docId,\n//   comments: allComments,\n//   posted,\n//   commentInput,\n//   content,\n// }) {\n//   const [comments, setComments] = useState(allComments);\n//   const [showing, setShowing] = useState(false);\n//   function Image({ src, caption }) {\n//     return (\n//       <div className=\"post__img\">\n//         <img src={src} alt={caption} />\n//       </div>\n//     );\n//   }\n//   function Comment({ showing }) {\n//     return (\n//       <>\n//         {!showing ? (\n//           <>\n//             {comments.slice(0, 3).map((item) => (\n//               <p key={`${item.comment}-${item.displayName}`} className=\"mb-1\">\n//                 <Link to={`/p/${item.displayName}`}>\n//                   <span className=\"mr-1 font-bold\">{item.displayName}</span>\n//                 </Link>\n//                 <span>{item.comment}</span>\n//               </p>\n//             ))}\n//           </>\n//         ) : (\n//           <>\n//             <div className=\"modal\">\n//               <div className=\"image\">\n//                 <Image src={content.imageSrc} caption={content.caption} />\n//               </div>\n//               <div className=\"sidecomment\">\n//                 {comments.map((item) => (\n//                   <p\n//                     key={`${item.comment}-${item.displayName}`}\n//                     className=\"mb-1\"\n//                   >\n//                     <Link to={`/p/${item.displayName}`}>\n//                       <span className=\"mr-1 font-bold\">{item.displayName}</span>\n//                     </Link>\n//                     <span>{item.comment}</span>\n//                   </p>\n//                 ))}\n//               </div>\n//             </div>\n//           </>\n//         )}\n//       </>\n//     );\n//   }\n//   return (\n//     <>\n//       <div className=\"p-4 pt-1 pb-4\">\n//         {comments.length >= 3 && (\n//           <p\n//             className=\"text-sm text-gray-500 mb-1 cursor-pointer\"\n//             onClick={() => {\n//               setShowing(!showing);\n//             }}\n//           >\n//             View all {comments.length} comments\n//           </p>\n//         )}\n//         <Comment showing={showing} />\n//         <p className=\"text-gray uppercase text-xs mt-2\">\n//           {formatDistance(posted, new Date())} ago\n//         </p>\n//       </div>\n//       <AddComment\n//         docId={docId}\n//         comments={comments}\n//         setComments={setComments}\n//         commentInput={commentInput}\n//       />\n//     </>\n//   );\n// }\nimport React, { useState } from \"react\";\nimport { formatDistance } from \"date-fns\";\nimport { Link } from \"react-router-dom\";\nimport AddComment from \"./add-comment\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Modal(_ref) {\n  _s();\n\n  let {\n    content\n  } = _ref;\n  const [comments, setComments] = useState(content.comments);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image\",\n        children: /*#__PURE__*/_jsxDEV(Image, {\n          src: content.imageSrc,\n          caption: content.caption\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidecomment\",\n        children: comments.map(item => /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mb-1\",\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: `/p/${item.displayName}`,\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"mr-1 font-bold\",\n              children: item.displayName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: item.comment\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 15\n          }, this)]\n        }, `${item.comment}-${item.displayName}`, true, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(Modal, \"BQJXrF4T/dpg1pAEYxfbA9+ztkI=\");\n\n_c = Modal;\nexport default function Comments(_ref2) {\n  _s2();\n\n  let {\n    docId,\n    comments: allComments,\n    posted,\n    commentInput\n  } = _ref2;\n  const [comments, setComments] = useState(allComments);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-4 pt-1 pb-4\",\n      children: [comments.length >= 3 && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-sm text-gray-500 mb-1 cursor-pointer\",\n        children: [\"View all \", comments.length, \" comments\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 11\n      }, this), comments.slice(0, 3).map(item => /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mb-1\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: `/p/${item.displayName}`,\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"mr-1 font-bold\",\n            children: item.displayName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: item.comment\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 13\n        }, this)]\n      }, `${item.comment}-${item.displayName}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray uppercase text-xs mt-2\",\n        children: [formatDistance(posted, new Date()), \" ago\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddComment, {\n      docId: docId,\n      comments: comments,\n      setComments: setComments,\n      commentInput: commentInput\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s2(Comments, \"LZlRtg2lM50mDVof2df2hoSAhCQ=\");\n\n_c2 = Comments;\nexport { Modal };\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Modal\");\n$RefreshReg$(_c2, \"Comments\");","map":{"version":3,"sources":["/Users/vijayabalaji/Desktop/challenges/Instagram/instagram/src/components/post/comments.js"],"names":["React","useState","formatDistance","Link","AddComment","Modal","content","comments","setComments","imageSrc","caption","map","item","displayName","comment","Comments","docId","allComments","posted","commentInput","length","slice","Date"],"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","sourcesContent":["// import React, { useState } from \"react\";\n// import { formatDistance } from \"date-fns\";\n// import { Link } from \"react-router-dom\";\n// import AddComment from \"./add-comment\";\n\n// export default function Comments({\n//   docId,\n//   comments: allComments,\n//   posted,\n//   commentInput,\n// }) {\n//   const [comments, setComments] = useState(allComments);\n\n//   return (\n//     <>\n//       <div className=\"p-4 pt-1 pb-4\">\n//         {comments.length >= 3 && (\n//           <p className=\"text-sm text-gray-500 mb-1 cursor-pointer\">\n//             View all {comments.length} comments\n//           </p>\n//         )}\n//         {comments.slice(0, 3).map((item) => (\n//           <p key={`${item.comment}-${item.displayName}`} className=\"mb-1\">\n//             <Link to={`/p/${item.displayName}`}>\n//               <span className=\"mr-1 font-bold\">{item.displayName}</span>\n//             </Link>\n//             <span>{item.comment}</span>\n//           </p>\n//         ))}\n//         <p className=\"text-gray uppercase text-xs mt-2\">\n//           {formatDistance(posted, new Date())} ago\n//         </p>\n//       </div>\n//       <AddComment\n//         docId={docId}\n//         comments={comments}\n//         setComments={setComments}\n//         commentInput={commentInput}\n//       />\n//     </>\n//   );\n// }\n\n// import React, { useState } from \"react\";\n// import { formatDistance } from \"date-fns\";\n// import { Link } from \"react-router-dom\";\n// import AddComment from \"./add-comment\";\n\n// export default function Comments({\n//   docId,\n//   comments: allComments,\n//   posted,\n//   commentInput,\n// }) {\n//   const [comments, setComments] = useState(allComments);\n//   const [showing, setShowing] = useState(false);\n//   function Comment({ showing }) {\n//     return (\n//       <>\n//         {!showing ? (\n//           <>\n//             {comments.slice(0, 3).map((item) => (\n//               <p key={`${item.comment}-${item.displayName}`} className=\"mb-1\">\n//                 <Link to={`/p/${item.displayName}`}>\n//                   <span className=\"mr-1 font-bold\">{item.displayName}</span>\n//                 </Link>\n//                 <span>{item.comment}</span>\n//               </p>\n//             ))}\n//           </>\n//         ) : (\n//           <>\n//             {comments.map((item) => (\n//               <p key={`${item.comment}-${item.displayName}`} className=\"mb-1\">\n//                 <Link to={`/p/${item.displayName}`}>\n//                   <span className=\"mr-1 font-bold\">{item.displayName}</span>\n//                 </Link>\n//                 <span>{item.comment}</span>\n//               </p>\n//             ))}\n//           </>\n//         )}\n//       </>\n//     );\n//   }\n\n//   return (\n//     <>\n//       <div className=\"p-4 pt-1 pb-4\">\n//         {comments.length >= 3 && (\n//           <p\n//             className=\"text-sm text-gray-500 mb-1 cursor-pointer\"\n//             onClick={() => {\n//               setShowing(!showing);\n//             }}\n//           >\n//             View all {comments.length} comments\n//           </p>\n//         )}\n//         <Comment showing={showing} />\n\n//         <p className=\"text-gray uppercase text-xs mt-2\">\n//           {formatDistance(posted, new Date())} ago\n//         </p>\n//       </div>\n//       <AddComment\n//         docId={docId}\n//         comments={comments}\n//         setComments={setComments}\n//         commentInput={commentInput}\n//       />\n//     </>\n//   );\n// }\n// import React, { useState } from \"react\";\n// import { formatDistance } from \"date-fns\";\n// import { Link } from \"react-router-dom\";\n// import AddComment from \"./add-comment\";\n// import \"./comments.css\";\n// export default function Comments({\n//   docId,\n//   comments: allComments,\n//   posted,\n//   commentInput,\n//   content,\n// }) {\n//   const [comments, setComments] = useState(allComments);\n//   const [showing, setShowing] = useState(false);\n//   function Image({ src, caption }) {\n//     return (\n//       <div className=\"post__img\">\n//         <img src={src} alt={caption} />\n//       </div>\n//     );\n//   }\n//   function Comment({ showing }) {\n//     return (\n//       <>\n//         {!showing ? (\n//           <>\n//             {comments.slice(0, 3).map((item) => (\n//               <p key={`${item.comment}-${item.displayName}`} className=\"mb-1\">\n//                 <Link to={`/p/${item.displayName}`}>\n//                   <span className=\"mr-1 font-bold\">{item.displayName}</span>\n//                 </Link>\n//                 <span>{item.comment}</span>\n//               </p>\n//             ))}\n//           </>\n//         ) : (\n//           <>\n//             <div className=\"modal\">\n//               <div className=\"image\">\n//                 <Image src={content.imageSrc} caption={content.caption} />\n//               </div>\n//               <div className=\"sidecomment\">\n//                 {comments.map((item) => (\n//                   <p\n//                     key={`${item.comment}-${item.displayName}`}\n//                     className=\"mb-1\"\n//                   >\n//                     <Link to={`/p/${item.displayName}`}>\n//                       <span className=\"mr-1 font-bold\">{item.displayName}</span>\n//                     </Link>\n//                     <span>{item.comment}</span>\n//                   </p>\n//                 ))}\n//               </div>\n//             </div>\n//           </>\n//         )}\n//       </>\n//     );\n//   }\n\n//   return (\n//     <>\n//       <div className=\"p-4 pt-1 pb-4\">\n//         {comments.length >= 3 && (\n//           <p\n//             className=\"text-sm text-gray-500 mb-1 cursor-pointer\"\n//             onClick={() => {\n//               setShowing(!showing);\n//             }}\n//           >\n//             View all {comments.length} comments\n//           </p>\n//         )}\n//         <Comment showing={showing} />\n//         <p className=\"text-gray uppercase text-xs mt-2\">\n//           {formatDistance(posted, new Date())} ago\n//         </p>\n//       </div>\n//       <AddComment\n//         docId={docId}\n//         comments={comments}\n//         setComments={setComments}\n//         commentInput={commentInput}\n//       />\n//     </>\n//   );\n// }\nimport React, { useState } from \"react\";\nimport { formatDistance } from \"date-fns\";\nimport { Link } from \"react-router-dom\";\nimport AddComment from \"./add-comment\";\nfunction Modal({ content }) {\n  const [comments, setComments] = useState(content.comments);\n  return (\n    <>\n      <div className=\"modal\">\n        <div className=\"image\">\n          <Image src={content.imageSrc} caption={content.caption} />\n        </div>\n        <div className=\"sidecomment\">\n          {comments.map((item) => (\n            <p key={`${item.comment}-${item.displayName}`} className=\"mb-1\">\n              <Link to={`/p/${item.displayName}`}>\n                <span className=\"mr-1 font-bold\">{item.displayName}</span>\n              </Link>\n              <span>{item.comment}</span>\n            </p>\n          ))}\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default function Comments({\n  docId,\n  comments: allComments,\n  posted,\n  commentInput,\n}) {\n  const [comments, setComments] = useState(allComments);\n\n  return (\n    <>\n      <div className=\"p-4 pt-1 pb-4\">\n        {comments.length >= 3 && (\n          <p className=\"text-sm text-gray-500 mb-1 cursor-pointer\">\n            View all {comments.length} comments\n          </p>\n        )}\n        {comments.slice(0, 3).map((item) => (\n          <p key={`${item.comment}-${item.displayName}`} className=\"mb-1\">\n            <Link to={`/p/${item.displayName}`}>\n              <span className=\"mr-1 font-bold\">{item.displayName}</span>\n            </Link>\n            <span>{item.comment}</span>\n          </p>\n        ))}\n        <p className=\"text-gray uppercase text-xs mt-2\">\n          {formatDistance(posted, new Date())} ago\n        </p>\n      </div>\n      <AddComment\n        docId={docId}\n        comments={comments}\n        setComments={setComments}\n        commentInput={commentInput}\n      />\n    </>\n  );\n}\nexport { Modal };\n"]},"metadata":{},"sourceType":"module"}