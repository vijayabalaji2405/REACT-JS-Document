{"ast":null,"code":"var _jsxFileName = \"/Users/vijayabalaji/Desktop/challenges/Instagram/instagram/src/components/post/comments.js\",\n    _s = $RefreshSig$();\n\n// import React, { useState } from \"react\";\n// import { formatDistance } from \"date-fns\";\n// import { Link } from \"react-router-dom\";\n// import AddComment from \"./add-comment\";\n// export default function Comments({\n//   docId,\n//   comments: allComments,\n//   posted,\n//   commentInput,\n// }) {\n//   const [comments, setComments] = useState(allComments);\n//   return (\n//     <>\n//       <div className=\"p-4 pt-1 pb-4\">\n//         {comments.length >= 3 && (\n//           <p className=\"text-sm text-gray-500 mb-1 cursor-pointer\">\n//             View all {comments.length} comments\n//           </p>\n//         )}\n//         {comments.slice(0, 3).map((item) => (\n//           <p key={`${item.comment}-${item.displayName}`} className=\"mb-1\">\n//             <Link to={`/p/${item.displayName}`}>\n//               <span className=\"mr-1 font-bold\">{item.displayName}</span>\n//             </Link>\n//             <span>{item.comment}</span>\n//           </p>\n//         ))}\n//         <p className=\"text-gray uppercase text-xs mt-2\">\n//           {formatDistance(posted, new Date())} ago\n//         </p>\n//       </div>\n//       <AddComment\n//         docId={docId}\n//         comments={comments}\n//         setComments={setComments}\n//         commentInput={commentInput}\n//       />\n//     </>\n//   );\n// }\n// import React, { useState } from \"react\";\n// import { formatDistance } from \"date-fns\";\n// import { Link } from \"react-router-dom\";\n// import AddComment from \"./add-comment\";\n// export default function Comments({\n//   docId,\n//   comments: allComments,\n//   posted,\n//   commentInput,\n// }) {\n//   const [comments, setComments] = useState(allComments);\n//   const [showing, setShowing] = useState(false);\n//   function Comment({ showing }) {\n//     return (\n//       <>\n//         {!showing ? (\n//           <>\n//             {comments.slice(0, 3).map((item) => (\n//               <p key={`${item.comment}-${item.displayName}`} className=\"mb-1\">\n//                 <Link to={`/p/${item.displayName}`}>\n//                   <span className=\"mr-1 font-bold\">{item.displayName}</span>\n//                 </Link>\n//                 <span>{item.comment}</span>\n//               </p>\n//             ))}\n//           </>\n//         ) : (\n//           <>\n//             {comments.map((item) => (\n//               <p key={`${item.comment}-${item.displayName}`} className=\"mb-1\">\n//                 <Link to={`/p/${item.displayName}`}>\n//                   <span className=\"mr-1 font-bold\">{item.displayName}</span>\n//                 </Link>\n//                 <span>{item.comment}</span>\n//               </p>\n//             ))}\n//           </>\n//         )}\n//       </>\n//     );\n//   }\n//   return (\n//     <>\n//       <div className=\"p-4 pt-1 pb-4\">\n//         {comments.length >= 3 && (\n//           <p\n//             className=\"text-sm text-gray-500 mb-1 cursor-pointer\"\n//             onClick={() => {\n//               setShowing(!showing);\n//             }}\n//           >\n//             View all {comments.length} comments\n//           </p>\n//         )}\n//         <Comment showing={showing} />\n//         <p className=\"text-gray uppercase text-xs mt-2\">\n//           {formatDistance(posted, new Date())} ago\n//         </p>\n//       </div>\n//       <AddComment\n//         docId={docId}\n//         comments={comments}\n//         setComments={setComments}\n//         commentInput={commentInput}\n//       />\n//     </>\n//   );\n// }\nimport React, { useState } from \"react\";\nimport { formatDistance } from \"date-fns\";\nimport { Link } from \"react-router-dom\";\nimport AddComment from \"./add-comment\";\nimport { comment } from \"../profile/header\"; // import \"./comments.css\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Comments(_ref) {\n  _s();\n\n  let {\n    docId,\n    comments: allComments,\n    posted,\n    commentInput,\n    content\n  } = _ref;\n  const [comments, setComments] = useState(allComments);\n  const [showing, setShowing] = useState(false);\n\n  /*#__PURE__*/\n  _jsxDEV(Comment, {\n    showing: showing,\n    content: content\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 3\n  }, this); // function Image({ src, caption }) {\n  //   return (\n  //     <div className=\"imgdiv\">\n  //       <img src={src} alt={caption} className=\"img\" />\n  //     </div>\n  //   );\n  // }\n  // function Comment({ showing }) {\n  //   const [showing1, setshowing1] = useState(showing);\n  //   return (\n  //     <>\n  //       {!showing1 ? (\n  //         <>\n  //           {comments.slice(0, 3).map((item) => (\n  //             <p key={`${item.comment}-${item.displayName}`} className=\"mb-1\">\n  //               <Link to={`/p/${item.displayName}`}>\n  //                 <span className=\"mr-1 font-bold\">{item.displayName}</span>\n  //               </Link>\n  //               <span>{item.comment}</span>\n  //             </p>\n  //           ))}\n  //         </>\n  //       ) : (\n  //         <>\n  //           <div className=\"modal fixed w-full h-full top-0 left-0 flex items-center justify-center z-50\">\n  //             <div className=\"modal-overlay fixed w-full h-full overflow-y-scroll bg-gray-900 left-0 right-0 opacity-50 -z-10\"></div>\n  //             <div className=\"modal-container bg-white w-full md:w-1/2 mx-auto rounded shadow-lg overflow-y-auto\">\n  //               <div className=\"image\">\n  //                 <Image src={content.imageSrc} caption={content.caption} />\n  //               </div>\n  //               <div\n  //                 className=\"x\"\n  //                 onClick={() => {\n  //                   setShowing(!showing);\n  //                 }}\n  //               >\n  //                 ‚ùå\n  //               </div>\n  //               <div className=\"head\">Comments :</div>\n  //               <div className=\"sidecomment\">\n  //                 {comments.map((item) => (\n  //                   <div\n  //                     key={`${item.comment}-${item.displayName}`}\n  //                     className=\"mb-1 classes\"\n  //                   >\n  //                     <Link to={`/p/${item.displayName}`}>\n  //                       <img\n  //                         className=\"rounded-full w-8 flex mr-3 imgclass\"\n  //                         src={`/images/avatars/${item.displayName}.jpg`}\n  //                         alt={`Follow ${item.displayName}`}\n  //                       />\n  //                     </Link>\n  //                     <Link to={`/p/${item.displayName}`}>\n  //                       <span className=\"name\">{item.displayName}:</span>\n  //                     </Link>\n  //                     <span className=\"comm\">{item.comment}</span>\n  //                   </div>\n  //                 ))}\n  //               </div>\n  //             </div>\n  //           </div>\n  //         </>\n  //       )}\n  //     </>\n  //   );\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-4 pt-1 pb-4\",\n      children: [comments.length >= 3 && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-sm text-gray-500 mb-1 cursor-pointer\",\n        onClick: () => {\n          setShowing(!showing);\n        },\n        children: [\"View all \", comments.length, \" comments\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray uppercase text-xs mt-2\",\n        children: [formatDistance(posted, new Date()), \" ago\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddComment, {\n      docId: docId,\n      comments: comments,\n      setComments: setComments,\n      commentInput: commentInput\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Comments, \"7/a+KgU4aPFAbhPacAKUN5GcxI4=\");\n\n_c = Comments;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"sources":["/Users/vijayabalaji/Desktop/challenges/Instagram/instagram/src/components/post/comments.js"],"names":["React","useState","formatDistance","Link","AddComment","comment","Comments","docId","comments","allComments","posted","commentInput","content","setComments","showing","setShowing","length","Date"],"mappingsgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,cAAT,QAA+B,UAA/B;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,SAASC,OAAT,QAAwB,mBAAxB,C,CACA;;;;AACA,eAAe,SAASC,QAAT,OAMZ;AAAA;;AAAA,MAN8B;AAC/BC,IAAAA,KAD+B;AAE/BC,IAAAA,QAAQ,EAAEC,WAFqB;AAG/BC,IAAAA,MAH+B;AAI/BC,IAAAA,YAJ+B;AAK/BC,IAAAA;AAL+B,GAM9B;AACD,QAAM,CAACJ,QAAD,EAAWK,WAAX,IAA0BZ,QAAQ,CAACQ,WAAD,CAAxC;AACA,QAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,CAAC,KAAD,CAAtC;;AACA;AAAA,UAAC,OAAD;AAAS,IAAA,OAAO,EAAEa,OAAlB;AAA2B,IAAA,OAAO,EAAEF;AAApC;AAAA;AAAA;AAAA;AAAA,WAHC,CAID;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,sBACE;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,iBACGJ,QAAQ,CAACQ,MAAT,IAAmB,CAAnB,iBACC;AACE,QAAA,SAAS,EAAC,2CADZ;AAEE,QAAA,OAAO,EAAE,MAAM;AACbD,UAAAA,UAAU,CAAC,CAACD,OAAF,CAAV;AACD,SAJH;AAAA,gCAMYN,QAAQ,CAACQ,MANrB;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAYE;AAAG,QAAA,SAAS,EAAC,kCAAb;AAAA,mBACGd,cAAc,CAACQ,MAAD,EAAS,IAAIO,IAAJ,EAAT,CADjB;AAAA;AAAA;AAAA;AAAA;AAAA,cAZF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAiBE,QAAC,UAAD;AACE,MAAA,KAAK,EAAEV,KADT;AAEE,MAAA,QAAQ,EAAEC,QAFZ;AAGE,MAAA,WAAW,EAAEK,WAHf;AAIE,MAAA,YAAY,EAAEF;AAJhB;AAAA;AAAA;AAAA;AAAA,YAjBF;AAAA,kBADF;AA0BD;;GAvGuBL,Q;;KAAAA,Q","sourcesContent":["// import React, { useState } from \"react\";\n// import { formatDistance } from \"date-fns\";\n// import { Link } from \"react-router-dom\";\n// import AddComment from \"./add-comment\";\n\n// export default function Comments({\n//   docId,\n//   comments: allComments,\n//   posted,\n//   commentInput,\n// }) {\n//   const [comments, setComments] = useState(allComments);\n\n//   return (\n//     <>\n//       <div className=\"p-4 pt-1 pb-4\">\n//         {comments.length >= 3 && (\n//           <p className=\"text-sm text-gray-500 mb-1 cursor-pointer\">\n//             View all {comments.length} comments\n//           </p>\n//         )}\n//         {comments.slice(0, 3).map((item) => (\n//           <p key={`${item.comment}-${item.displayName}`} className=\"mb-1\">\n//             <Link to={`/p/${item.displayName}`}>\n//               <span className=\"mr-1 font-bold\">{item.displayName}</span>\n//             </Link>\n//             <span>{item.comment}</span>\n//           </p>\n//         ))}\n//         <p className=\"text-gray uppercase text-xs mt-2\">\n//           {formatDistance(posted, new Date())} ago\n//         </p>\n//       </div>\n//       <AddComment\n//         docId={docId}\n//         comments={comments}\n//         setComments={setComments}\n//         commentInput={commentInput}\n//       />\n//     </>\n//   );\n// }\n\n// import React, { useState } from \"react\";\n// import { formatDistance } from \"date-fns\";\n// import { Link } from \"react-router-dom\";\n// import AddComment from \"./add-comment\";\n\n// export default function Comments({\n//   docId,\n//   comments: allComments,\n//   posted,\n//   commentInput,\n// }) {\n//   const [comments, setComments] = useState(allComments);\n//   const [showing, setShowing] = useState(false);\n//   function Comment({ showing }) {\n//     return (\n//       <>\n//         {!showing ? (\n//           <>\n//             {comments.slice(0, 3).map((item) => (\n//               <p key={`${item.comment}-${item.displayName}`} className=\"mb-1\">\n//                 <Link to={`/p/${item.displayName}`}>\n//                   <span className=\"mr-1 font-bold\">{item.displayName}</span>\n//                 </Link>\n//                 <span>{item.comment}</span>\n//               </p>\n//             ))}\n//           </>\n//         ) : (\n//           <>\n//             {comments.map((item) => (\n//               <p key={`${item.comment}-${item.displayName}`} className=\"mb-1\">\n//                 <Link to={`/p/${item.displayName}`}>\n//                   <span className=\"mr-1 font-bold\">{item.displayName}</span>\n//                 </Link>\n//                 <span>{item.comment}</span>\n//               </p>\n//             ))}\n//           </>\n//         )}\n//       </>\n//     );\n//   }\n\n//   return (\n//     <>\n//       <div className=\"p-4 pt-1 pb-4\">\n//         {comments.length >= 3 && (\n//           <p\n//             className=\"text-sm text-gray-500 mb-1 cursor-pointer\"\n//             onClick={() => {\n//               setShowing(!showing);\n//             }}\n//           >\n//             View all {comments.length} comments\n//           </p>\n//         )}\n//         <Comment showing={showing} />\n\n//         <p className=\"text-gray uppercase text-xs mt-2\">\n//           {formatDistance(posted, new Date())} ago\n//         </p>\n//       </div>\n//       <AddComment\n//         docId={docId}\n//         comments={comments}\n//         setComments={setComments}\n//         commentInput={commentInput}\n//       />\n//     </>\n//   );\n// }\nimport React, { useState } from \"react\";\nimport { formatDistance } from \"date-fns\";\nimport { Link } from \"react-router-dom\";\nimport AddComment from \"./add-comment\";\nimport { comment } from \"../profile/header\";\n// import \"./comments.css\";\nexport default function Comments({\n  docId,\n  comments: allComments,\n  posted,\n  commentInput,\n  content,\n}) {\n  const [comments, setComments] = useState(allComments);\n  const [showing, setShowing] = useState(false);\n  <Comment showing={showing} content={content} />;\n  // function Image({ src, caption }) {\n  //   return (\n  //     <div className=\"imgdiv\">\n  //       <img src={src} alt={caption} className=\"img\" />\n  //     </div>\n  //   );\n  // }\n  // function Comment({ showing }) {\n  //   const [showing1, setshowing1] = useState(showing);\n  //   return (\n  //     <>\n  //       {!showing1 ? (\n  //         <>\n  //           {comments.slice(0, 3).map((item) => (\n  //             <p key={`${item.comment}-${item.displayName}`} className=\"mb-1\">\n  //               <Link to={`/p/${item.displayName}`}>\n  //                 <span className=\"mr-1 font-bold\">{item.displayName}</span>\n  //               </Link>\n  //               <span>{item.comment}</span>\n  //             </p>\n  //           ))}\n  //         </>\n  //       ) : (\n  //         <>\n  //           <div className=\"modal fixed w-full h-full top-0 left-0 flex items-center justify-center z-50\">\n  //             <div className=\"modal-overlay fixed w-full h-full overflow-y-scroll bg-gray-900 left-0 right-0 opacity-50 -z-10\"></div>\n  //             <div className=\"modal-container bg-white w-full md:w-1/2 mx-auto rounded shadow-lg overflow-y-auto\">\n  //               <div className=\"image\">\n  //                 <Image src={content.imageSrc} caption={content.caption} />\n  //               </div>\n  //               <div\n  //                 className=\"x\"\n  //                 onClick={() => {\n  //                   setShowing(!showing);\n  //                 }}\n  //               >\n  //                 ‚ùå\n  //               </div>\n  //               <div className=\"head\">Comments :</div>\n  //               <div className=\"sidecomment\">\n  //                 {comments.map((item) => (\n  //                   <div\n  //                     key={`${item.comment}-${item.displayName}`}\n  //                     className=\"mb-1 classes\"\n  //                   >\n  //                     <Link to={`/p/${item.displayName}`}>\n  //                       <img\n  //                         className=\"rounded-full w-8 flex mr-3 imgclass\"\n  //                         src={`/images/avatars/${item.displayName}.jpg`}\n  //                         alt={`Follow ${item.displayName}`}\n  //                       />\n  //                     </Link>\n  //                     <Link to={`/p/${item.displayName}`}>\n  //                       <span className=\"name\">{item.displayName}:</span>\n  //                     </Link>\n  //                     <span className=\"comm\">{item.comment}</span>\n  //                   </div>\n  //                 ))}\n  //               </div>\n  //             </div>\n  //           </div>\n  //         </>\n  //       )}\n  //     </>\n  //   );\n  // }\n\n  return (\n    <>\n      <div className=\"p-4 pt-1 pb-4\">\n        {comments.length >= 3 && (\n          <p\n            className=\"text-sm text-gray-500 mb-1 cursor-pointer\"\n            onClick={() => {\n              setShowing(!showing);\n            }}\n          >\n            View all {comments.length} comments\n          </p>\n        )}\n\n        <p className=\"text-gray uppercase text-xs mt-2\">\n          {formatDistance(posted, new Date())} ago\n        </p>\n      </div>\n      <AddComment\n        docId={docId}\n        comments={comments}\n        setComments={setComments}\n        commentInput={commentInput}\n      />\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}