{"ast":null,"code":"var _jsxFileName = \"/Users/vijayabalaji/Desktop/challenges/Instagram/instagram/src/components/post/comments.js\",\n    _s2 = $RefreshSig$();\n\n// import React, { useState } from \"react\";\n// import { formatDistance } from \"date-fns\";\n// import { Link } from \"react-router-dom\";\n// import AddComment from \"./add-comment\";\n// export default function Comments({\n//   docId,\n//   comments: allComments,\n//   posted,\n//   commentInput,\n// }) {\n//   const [comments, setComments] = useState(allComments);\n//   return (\n//     <>\n//       <div className=\"p-4 pt-1 pb-4\">\n//         {comments.length >= 3 && (\n//           <p className=\"text-sm text-gray-500 mb-1 cursor-pointer\">\n//             View all {comments.length} comments\n//           </p>\n//         )}\n//         {comments.slice(0, 3).map((item) => (\n//           <p key={`${item.comment}-${item.displayName}`} className=\"mb-1\">\n//             <Link to={`/p/${item.displayName}`}>\n//               <span className=\"mr-1 font-bold\">{item.displayName}</span>\n//             </Link>\n//             <span>{item.comment}</span>\n//           </p>\n//         ))}\n//         <p className=\"text-gray uppercase text-xs mt-2\">\n//           {formatDistance(posted, new Date())} ago\n//         </p>\n//       </div>\n//       <AddComment\n//         docId={docId}\n//         comments={comments}\n//         setComments={setComments}\n//         commentInput={commentInput}\n//       />\n//     </>\n//   );\n// }\n// import React, { useState } from \"react\";\n// import { formatDistance } from \"date-fns\";\n// import { Link } from \"react-router-dom\";\n// import AddComment from \"./add-comment\";\n// export default function Comments({\n//   docId,\n//   comments: allComments,\n//   posted,\n//   commentInput,\n// }) {\n//   const [comments, setComments] = useState(allComments);\n//   const [showing, setShowing] = useState(false);\n//   function Comment({ showing }) {\n//     return (\n//       <>\n//         {!showing ? (\n//           <>\n//             {comments.slice(0, 3).map((item) => (\n//               <p key={`${item.comment}-${item.displayName}`} className=\"mb-1\">\n//                 <Link to={`/p/${item.displayName}`}>\n//                   <span className=\"mr-1 font-bold\">{item.displayName}</span>\n//                 </Link>\n//                 <span>{item.comment}</span>\n//               </p>\n//             ))}\n//           </>\n//         ) : (\n//           <>\n//             {comments.map((item) => (\n//               <p key={`${item.comment}-${item.displayName}`} className=\"mb-1\">\n//                 <Link to={`/p/${item.displayName}`}>\n//                   <span className=\"mr-1 font-bold\">{item.displayName}</span>\n//                 </Link>\n//                 <span>{item.comment}</span>\n//               </p>\n//             ))}\n//           </>\n//         )}\n//       </>\n//     );\n//   }\n//   return (\n//     <>\n//       <div className=\"p-4 pt-1 pb-4\">\n//         {comments.length >= 3 && (\n//           <p\n//             className=\"text-sm text-gray-500 mb-1 cursor-pointer\"\n//             onClick={() => {\n//               setShowing(!showing);\n//             }}\n//           >\n//             View all {comments.length} comments\n//           </p>\n//         )}\n//         <Comment showing={showing} />\n//         <p className=\"text-gray uppercase text-xs mt-2\">\n//           {formatDistance(posted, new Date())} ago\n//         </p>\n//       </div>\n//       <AddComment\n//         docId={docId}\n//         comments={comments}\n//         setComments={setComments}\n//         commentInput={commentInput}\n//       />\n//     </>\n//   );\n// }\nimport React, { useState } from \"react\";\nimport { formatDistance } from \"date-fns\";\nimport { Link } from \"react-router-dom\";\nimport AddComment from \"./add-comment\";\nimport { Comment } from \"../profile/header\";\nimport \"./comments.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Comments(_ref) {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  let {\n    docId,\n    comments: allComments,\n    posted,\n    commentInput,\n    content\n  } = _ref;\n  const [comments, setComments] = useState(allComments); // const [showing, setShowing] = useState(false);\n  // const handleToggleLiked = async () => {\n  //   setToggleLiked((toggleLiked) => !toggleLiked);\n  //   await firebase\n  //     .firestore()\n  //     .collection(\"photos\")\n  //     .doc(docId)\n  //     .update({\n  //       likes: toggleLiked\n  //         ? FieldValue.arrayRemove(userId)\n  //         : FieldValue.arrayUnion(userId),\n  //     });\n  //   setLikes((likes) => (toggleLiked ? likes - 1 : likes + 1));\n  // };\n\n  function Image(_ref2) {\n    let {\n      src,\n      caption\n    } = _ref2;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"imgdiv\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: src,\n        alt: caption,\n        className: \"img\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this);\n  }\n\n  function Comment(_ref3) {\n    _s();\n\n    let {\n      showing\n    } = _ref3;\n    const [showing1, setshowing1] = useState(showing);\n    const [toggleLiked, setToggleLiked] = useState(likedPhoto);\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: !showing1 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: comments.slice(0, 3).map(item => /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mb-1\",\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: `/p/${item.displayName}`,\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"mr-1 font-bold\",\n              children: item.displayName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: item.comment\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 17\n          }, this)]\n        }, `${item.comment}-${item.displayName}`, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 15\n        }, this))\n      }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"image\",\n            children: /*#__PURE__*/_jsxDEV(Image, {\n              src: content.imageSrc,\n              caption: content.caption\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"x\",\n            onClick: () => {\n              setShowing(!showing);\n            },\n            children: \"\\u274C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"head\",\n            children: \"Comments :\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sidecomment\",\n            children: comments.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-1 classes\",\n              children: [/*#__PURE__*/_jsxDEV(Link, {\n                to: `/p/${item.displayName}`,\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  className: \"rounded-full w-8 flex mr-3 imgclass\",\n                  src: `/images/avatars/${item.displayName}.jpg`,\n                  alt: `Follow ${item.displayName}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 191,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Link, {\n                to: `/p/${item.displayName}`,\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"name\",\n                  children: [item.displayName, \":\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 198,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"comm\",\n                children: item.comment\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n                onClick: () => handleToggleLiked(toggleLiked => !toggleLiked),\n                onKeyDown: e => {\n                  if (e.key === \"Enter\") {\n                    handleToggleLiked(toggleLiked => !toggleLiked);\n                  }\n                },\n                className: `w-8 mr-4 select-none cursor-pointer ${toggleLiked ? \"fill-current text-red-500\" : \"text-black\"}`,\n                xmlns: \"http://www.w3.org/2000/svg\",\n                fill: \"none\",\n                viewBox: \"0 0 24 24\",\n                stroke: \"currentColor\",\n                tabIndex: 0,\n                children: /*#__PURE__*/_jsxDEV(\"path\", {\n                  strokeLinecap: \"round\",\n                  strokeLinejoin: \"round\",\n                  strokeWidth: 2,\n                  d: \"M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 219,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 21\n              }, this)]\n            }, `${item.comment}-${item.displayName}`, true, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 13\n        }, this)\n      }, void 0, false)\n    }, void 0, false);\n  }\n\n  _s(Comment, \"G7RgLm0nzuiQXmOwPXmPI1XG4oA=\");\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-4 pt-1 pb-4\",\n      children: [comments.length >= 3 && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-sm text-gray-500 mb-1 cursor-pointer\",\n        onClick: () => {\n          setShowing(!showing);\n        },\n        children: [\"View all \", comments.length, \" comments\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Comment, {\n        showing: showing\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray uppercase text-xs mt-2\",\n        children: [formatDistance(posted, new Date()), \" ago\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddComment, {\n      docId: docId,\n      comments: comments,\n      setComments: setComments,\n      commentInput: commentInput\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s2(Comments, \"LZlRtg2lM50mDVof2df2hoSAhCQ=\");\n\n_c = Comments;\n{\n  /* <div className=\"modal fixed w-full h-full top-0 left-0 flex items-center justify-center z-50\">\n              <div className=\"modal-overlay fixed w-full h-full overflow-y-scroll bg-gray-900 left-0 right-0 opacity-50 -z-10\"></div>\n              <div className=\"modal-container bg-white w-full md:w-1/2 mx-auto rounded shadow-lg overflow-y-auto\">\n                <div className=\"image\">\n                  <Image src={content.imageSrc} caption={content.caption} />\n                </div>\n                <div\n                  className=\"x\"\n                  onClick={() => {\n                    setShowing(!showing);\n                  }}\n                >\n                  ❌\n                </div>\n                <div className=\"head\">Comments :</div>\n                <div className=\"sidecomment\">\n                  {comments.map((item) => (\n                    <div\n                      key={`${item.comment}-${item.displayName}`}\n                      className=\"mb-1 classes\"\n                    >\n                      <Link to={`/p/${item.displayName}`}>\n                        <img\n                          className=\"rounded-full w-8 flex mr-3 imgclass\"\n                          src={`/images/avatars/${item.displayName}.jpg`}\n                          alt={`Follow ${item.displayName}`}\n                        />\n                      </Link>\n                      <Link to={`/p/${item.displayName}`}>\n                        <span className=\"name\">{item.displayName}:</span>\n                      </Link>\n                      <span className=\"comm\">{item.comment}</span>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            </div> */\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"sources":["/Users/vijayabalaji/Desktop/challenges/Instagram/instagram/src/components/post/comments.js"],"names":["React","useState","formatDistance","Link","AddComment","Comment","Comments","docId","comments","allComments","posted","commentInput","content","setComments","Image","src","caption","showing","showing1","setshowing1","toggleLiked","setToggleLiked","likedPhoto","slice","map","item","displayName","comment","imageSrc","setShowing","handleToggleLiked","e","key","length","Date"],"mappingsgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,cAAT,QAA+B,UAA/B;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,SAASC,OAAT,QAAwB,mBAAxB;AACA,OAAO,gBAAP;;;AACA,eAAe,SAASC,QAAT,OAMZ;AAAA;;AAAA;;AAAA,MAN8B;AAC/BC,IAAAA,KAD+B;AAE/BC,IAAAA,QAAQ,EAAEC,WAFqB;AAG/BC,IAAAA,MAH+B;AAI/BC,IAAAA,YAJ+B;AAK/BC,IAAAA;AAL+B,GAM9B;AACD,QAAM,CAACJ,QAAD,EAAWK,WAAX,IAA0BZ,QAAQ,CAACQ,WAAD,CAAxC,CADC,CAED;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAEA,WAASK,KAAT,QAAiC;AAAA,QAAlB;AAAEC,MAAAA,GAAF;AAAOC,MAAAA;AAAP,KAAkB;AAC/B,wBACE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,6BACE;AAAK,QAAA,GAAG,EAAED,GAAV;AAAe,QAAA,GAAG,EAAEC,OAApB;AAA6B,QAAA,SAAS,EAAC;AAAvC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AACD,WAASX,OAAT,QAA8B;AAAA;;AAAA,QAAb;AAAEY,MAAAA;AAAF,KAAa;AAC5B,UAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BlB,QAAQ,CAACgB,OAAD,CAAxC;AACA,UAAM,CAACG,WAAD,EAAcC,cAAd,IAAgCpB,QAAQ,CAACqB,UAAD,CAA9C;AACA,wBACE;AAAA,gBACG,CAACJ,QAAD,gBACC;AAAA,kBACGV,QAAQ,CAACe,KAAT,CAAe,CAAf,EAAkB,CAAlB,EAAqBC,GAArB,CAA0BC,IAAD,iBACxB;AAA+C,UAAA,SAAS,EAAC,MAAzD;AAAA,kCACE,QAAC,IAAD;AAAM,YAAA,EAAE,EAAG,MAAKA,IAAI,CAACC,WAAY,EAAjC;AAAA,mCACE;AAAM,cAAA,SAAS,EAAC,gBAAhB;AAAA,wBAAkCD,IAAI,CAACC;AAAvC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE;AAAA,sBAAOD,IAAI,CAACE;AAAZ;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA,WAAS,GAAEF,IAAI,CAACE,OAAQ,IAAGF,IAAI,CAACC,WAAY,EAA5C;AAAA;AAAA;AAAA;AAAA,gBADD;AADH,uBADD,gBAYC;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,OAAf;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC,OAAf;AAAA,mCACE,QAAC,KAAD;AAAO,cAAA,GAAG,EAAEd,OAAO,CAACgB,QAApB;AAA8B,cAAA,OAAO,EAAEhB,OAAO,CAACI;AAA/C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE;AACE,YAAA,SAAS,EAAC,GADZ;AAEE,YAAA,OAAO,EAAE,MAAM;AACba,cAAAA,UAAU,CAAC,CAACZ,OAAF,CAAV;AACD,aAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF,eAYE;AAAK,YAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAZF,eAaE;AAAK,YAAA,SAAS,EAAC,aAAf;AAAA,sBACGT,QAAQ,CAACgB,GAAT,CAAcC,IAAD,iBACZ;AAEE,cAAA,SAAS,EAAC,cAFZ;AAAA,sCAIE,QAAC,IAAD;AAAM,gBAAA,EAAE,EAAG,MAAKA,IAAI,CAACC,WAAY,EAAjC;AAAA,uCACE;AACE,kBAAA,SAAS,EAAC,qCADZ;AAEE,kBAAA,GAAG,EAAG,mBAAkBD,IAAI,CAACC,WAAY,MAF3C;AAGE,kBAAA,GAAG,EAAG,UAASD,IAAI,CAACC,WAAY;AAHlC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBAJF,eAWE,QAAC,IAAD;AAAM,gBAAA,EAAE,EAAG,MAAKD,IAAI,CAACC,WAAY,EAAjC;AAAA,uCACE;AAAM,kBAAA,SAAS,EAAC,MAAhB;AAAA,6BAAwBD,IAAI,CAACC,WAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBAXF,eAcE;AAAM,gBAAA,SAAS,EAAC,MAAhB;AAAA,0BAAwBD,IAAI,CAACE;AAA7B;AAAA;AAAA;AAAA;AAAA,sBAdF,eAeE;AACE,gBAAA,OAAO,EAAE,MACPG,iBAAiB,CAAEV,WAAD,IAAiB,CAACA,WAAnB,CAFrB;AAIE,gBAAA,SAAS,EAAGW,CAAD,IAAO;AAChB,sBAAIA,CAAC,CAACC,GAAF,KAAU,OAAd,EAAuB;AACrBF,oBAAAA,iBAAiB,CAAEV,WAAD,IAAiB,CAACA,WAAnB,CAAjB;AACD;AACF,iBARH;AASE,gBAAA,SAAS,EAAG,uCACVA,WAAW,GAAG,2BAAH,GAAiC,YAC7C,EAXH;AAYE,gBAAA,KAAK,EAAC,4BAZR;AAaE,gBAAA,IAAI,EAAC,MAbP;AAcE,gBAAA,OAAO,EAAC,WAdV;AAeE,gBAAA,MAAM,EAAC,cAfT;AAgBE,gBAAA,QAAQ,EAAE,CAhBZ;AAAA,uCAkBE;AACE,kBAAA,aAAa,EAAC,OADhB;AAEE,kBAAA,cAAc,EAAC,OAFjB;AAGE,kBAAA,WAAW,EAAE,CAHf;AAIE,kBAAA,CAAC,EAAC;AAJJ;AAAA;AAAA;AAAA;AAAA;AAlBF;AAAA;AAAA;AAAA;AAAA,sBAfF;AAAA,eACQ,GAAEK,IAAI,CAACE,OAAQ,IAAGF,IAAI,CAACC,WAAY,EAD3C;AAAA;AAAA;AAAA;AAAA,oBADD;AADH;AAAA;AAAA;AAAA;AAAA,kBAbF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAbJ,qBADF;AA8ED;;AA3GA,KA0BQrB,OA1BR;;AA6GD,sBACE;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,iBACGG,QAAQ,CAACyB,MAAT,IAAmB,CAAnB,iBACC;AACE,QAAA,SAAS,EAAC,2CADZ;AAEE,QAAA,OAAO,EAAE,MAAM;AACbJ,UAAAA,UAAU,CAAC,CAACZ,OAAF,CAAV;AACD,SAJH;AAAA,gCAMYT,QAAQ,CAACyB,MANrB;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAWE,QAAC,OAAD;AAAS,QAAA,OAAO,EAAEhB;AAAlB;AAAA;AAAA;AAAA;AAAA,cAXF,eAYE;AAAG,QAAA,SAAS,EAAC,kCAAb;AAAA,mBACGf,cAAc,CAACQ,MAAD,EAAS,IAAIwB,IAAJ,EAAT,CADjB;AAAA;AAAA;AAAA;AAAA;AAAA,cAZF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAiBE,QAAC,UAAD;AACE,MAAA,KAAK,EAAE3B,KADT;AAEE,MAAA,QAAQ,EAAEC,QAFZ;AAGE,MAAA,WAAW,EAAEK,WAHf;AAIE,MAAA,YAAY,EAAEF;AAJhB;AAAA;AAAA;AAAA;AAAA,YAjBF;AAAA,kBADF;AA0BD;;IA7IuBL,Q;;KAAAA,Q;AA+IxB;AACE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACC","sourcesContent":["// import React, { useState } from \"react\";\n// import { formatDistance } from \"date-fns\";\n// import { Link } from \"react-router-dom\";\n// import AddComment from \"./add-comment\";\n\n// export default function Comments({\n//   docId,\n//   comments: allComments,\n//   posted,\n//   commentInput,\n// }) {\n//   const [comments, setComments] = useState(allComments);\n\n//   return (\n//     <>\n//       <div className=\"p-4 pt-1 pb-4\">\n//         {comments.length >= 3 && (\n//           <p className=\"text-sm text-gray-500 mb-1 cursor-pointer\">\n//             View all {comments.length} comments\n//           </p>\n//         )}\n//         {comments.slice(0, 3).map((item) => (\n//           <p key={`${item.comment}-${item.displayName}`} className=\"mb-1\">\n//             <Link to={`/p/${item.displayName}`}>\n//               <span className=\"mr-1 font-bold\">{item.displayName}</span>\n//             </Link>\n//             <span>{item.comment}</span>\n//           </p>\n//         ))}\n//         <p className=\"text-gray uppercase text-xs mt-2\">\n//           {formatDistance(posted, new Date())} ago\n//         </p>\n//       </div>\n//       <AddComment\n//         docId={docId}\n//         comments={comments}\n//         setComments={setComments}\n//         commentInput={commentInput}\n//       />\n//     </>\n//   );\n// }\n\n// import React, { useState } from \"react\";\n// import { formatDistance } from \"date-fns\";\n// import { Link } from \"react-router-dom\";\n// import AddComment from \"./add-comment\";\n\n// export default function Comments({\n//   docId,\n//   comments: allComments,\n//   posted,\n//   commentInput,\n// }) {\n//   const [comments, setComments] = useState(allComments);\n//   const [showing, setShowing] = useState(false);\n//   function Comment({ showing }) {\n//     return (\n//       <>\n//         {!showing ? (\n//           <>\n//             {comments.slice(0, 3).map((item) => (\n//               <p key={`${item.comment}-${item.displayName}`} className=\"mb-1\">\n//                 <Link to={`/p/${item.displayName}`}>\n//                   <span className=\"mr-1 font-bold\">{item.displayName}</span>\n//                 </Link>\n//                 <span>{item.comment}</span>\n//               </p>\n//             ))}\n//           </>\n//         ) : (\n//           <>\n//             {comments.map((item) => (\n//               <p key={`${item.comment}-${item.displayName}`} className=\"mb-1\">\n//                 <Link to={`/p/${item.displayName}`}>\n//                   <span className=\"mr-1 font-bold\">{item.displayName}</span>\n//                 </Link>\n//                 <span>{item.comment}</span>\n//               </p>\n//             ))}\n//           </>\n//         )}\n//       </>\n//     );\n//   }\n\n//   return (\n//     <>\n//       <div className=\"p-4 pt-1 pb-4\">\n//         {comments.length >= 3 && (\n//           <p\n//             className=\"text-sm text-gray-500 mb-1 cursor-pointer\"\n//             onClick={() => {\n//               setShowing(!showing);\n//             }}\n//           >\n//             View all {comments.length} comments\n//           </p>\n//         )}\n//         <Comment showing={showing} />\n\n//         <p className=\"text-gray uppercase text-xs mt-2\">\n//           {formatDistance(posted, new Date())} ago\n//         </p>\n//       </div>\n//       <AddComment\n//         docId={docId}\n//         comments={comments}\n//         setComments={setComments}\n//         commentInput={commentInput}\n//       />\n//     </>\n//   );\n// }\nimport React, { useState } from \"react\";\nimport { formatDistance } from \"date-fns\";\nimport { Link } from \"react-router-dom\";\nimport AddComment from \"./add-comment\";\nimport { Comment } from \"../profile/header\";\nimport \"./comments.css\";\nexport default function Comments({\n  docId,\n  comments: allComments,\n  posted,\n  commentInput,\n  content,\n}) {\n  const [comments, setComments] = useState(allComments);\n  // const [showing, setShowing] = useState(false);\n\n  // const handleToggleLiked = async () => {\n  //   setToggleLiked((toggleLiked) => !toggleLiked);\n  //   await firebase\n  //     .firestore()\n  //     .collection(\"photos\")\n  //     .doc(docId)\n  //     .update({\n  //       likes: toggleLiked\n  //         ? FieldValue.arrayRemove(userId)\n  //         : FieldValue.arrayUnion(userId),\n  //     });\n\n  //   setLikes((likes) => (toggleLiked ? likes - 1 : likes + 1));\n  // };\n\n  function Image({ src, caption }) {\n    return (\n      <div className=\"imgdiv\">\n        <img src={src} alt={caption} className=\"img\" />\n      </div>\n    );\n  }\n  function Comment({ showing }) {\n    const [showing1, setshowing1] = useState(showing);\n    const [toggleLiked, setToggleLiked] = useState(likedPhoto);\n    return (\n      <>\n        {!showing1 ? (\n          <>\n            {comments.slice(0, 3).map((item) => (\n              <p key={`${item.comment}-${item.displayName}`} className=\"mb-1\">\n                <Link to={`/p/${item.displayName}`}>\n                  <span className=\"mr-1 font-bold\">{item.displayName}</span>\n                </Link>\n                <span>{item.comment}</span>\n              </p>\n            ))}\n          </>\n        ) : (\n          <>\n            <div className=\"modal\">\n              <div className=\"image\">\n                <Image src={content.imageSrc} caption={content.caption} />\n              </div>\n              <div\n                className=\"x\"\n                onClick={() => {\n                  setShowing(!showing);\n                }}\n              >\n                ❌\n              </div>\n              <div className=\"head\">Comments :</div>\n              <div className=\"sidecomment\">\n                {comments.map((item) => (\n                  <div\n                    key={`${item.comment}-${item.displayName}`}\n                    className=\"mb-1 classes\"\n                  >\n                    <Link to={`/p/${item.displayName}`}>\n                      <img\n                        className=\"rounded-full w-8 flex mr-3 imgclass\"\n                        src={`/images/avatars/${item.displayName}.jpg`}\n                        alt={`Follow ${item.displayName}`}\n                      />\n                    </Link>\n                    <Link to={`/p/${item.displayName}`}>\n                      <span className=\"name\">{item.displayName}:</span>\n                    </Link>\n                    <span className=\"comm\">{item.comment}</span>\n                    <svg\n                      onClick={() =>\n                        handleToggleLiked((toggleLiked) => !toggleLiked)\n                      }\n                      onKeyDown={(e) => {\n                        if (e.key === \"Enter\") {\n                          handleToggleLiked((toggleLiked) => !toggleLiked);\n                        }\n                      }}\n                      className={`w-8 mr-4 select-none cursor-pointer ${\n                        toggleLiked ? \"fill-current text-red-500\" : \"text-black\"\n                      }`}\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      fill=\"none\"\n                      viewBox=\"0 0 24 24\"\n                      stroke=\"currentColor\"\n                      tabIndex={0}\n                    >\n                      <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z\"\n                      />\n                    </svg>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </>\n        )}\n      </>\n    );\n  }\n\n  return (\n    <>\n      <div className=\"p-4 pt-1 pb-4\">\n        {comments.length >= 3 && (\n          <p\n            className=\"text-sm text-gray-500 mb-1 cursor-pointer\"\n            onClick={() => {\n              setShowing(!showing);\n            }}\n          >\n            View all {comments.length} comments\n          </p>\n        )}\n        <Comment showing={showing} />\n        <p className=\"text-gray uppercase text-xs mt-2\">\n          {formatDistance(posted, new Date())} ago\n        </p>\n      </div>\n      <AddComment\n        docId={docId}\n        comments={comments}\n        setComments={setComments}\n        commentInput={commentInput}\n      />\n    </>\n  );\n}\n\n{\n  /* <div className=\"modal fixed w-full h-full top-0 left-0 flex items-center justify-center z-50\">\n              <div className=\"modal-overlay fixed w-full h-full overflow-y-scroll bg-gray-900 left-0 right-0 opacity-50 -z-10\"></div>\n              <div className=\"modal-container bg-white w-full md:w-1/2 mx-auto rounded shadow-lg overflow-y-auto\">\n                <div className=\"image\">\n                  <Image src={content.imageSrc} caption={content.caption} />\n                </div>\n                <div\n                  className=\"x\"\n                  onClick={() => {\n                    setShowing(!showing);\n                  }}\n                >\n                  ❌\n                </div>\n                <div className=\"head\">Comments :</div>\n                <div className=\"sidecomment\">\n                  {comments.map((item) => (\n                    <div\n                      key={`${item.comment}-${item.displayName}`}\n                      className=\"mb-1 classes\"\n                    >\n                      <Link to={`/p/${item.displayName}`}>\n                        <img\n                          className=\"rounded-full w-8 flex mr-3 imgclass\"\n                          src={`/images/avatars/${item.displayName}.jpg`}\n                          alt={`Follow ${item.displayName}`}\n                        />\n                      </Link>\n                      <Link to={`/p/${item.displayName}`}>\n                        <span className=\"name\">{item.displayName}:</span>\n                      </Link>\n                      <span className=\"comm\">{item.comment}</span>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            </div> */\n}\n"]},"metadata":{},"sourceType":"module"}