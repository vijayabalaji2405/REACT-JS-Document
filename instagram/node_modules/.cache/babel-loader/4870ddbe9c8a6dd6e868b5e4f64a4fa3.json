{"ast":null,"code":"import { firebase, FieldValue } from \"../lib/firebase\";\nexport async function isUserFollowingProfile(activeUsername, profileUserId) {\n  const result = await firebase.firestore().collection(\"users\").where(\"username\", \"==\", activeUsername) // karl (active logged in user)\n  .where(\"following\", \"array-contains\", profileUserId).get();\n  const [response = {}] = result.docs.map(item => ({ ...item.data(),\n    docId: item.id\n  }));\n  return !!response.fullName;\n}\nexport async function doesUsernameExist(username) {\n  const result = await firebase.firestore().collection(\"users\").where(\"username\", \"==\", username).get();\n  return result.docs.map(user => user.data().length > 0);\n}\nexport async function getUserByUserId(userId) {\n  const result = await firebase.firestore().collection(\"users\").where(\"userId\", \"==\", userId).get();\n  const user = result.docs.map(item => ({ ...item.data(),\n    docId: item.id\n  }));\n  return user;\n}\nexport async function getUserFollowedPhotos(userId, followingUserIds) {\n  const result = await firebase.firestore().collection(\"photos\").where(\"userId\", \"in\", followingUserIds).get();\n  const userFollowedPhotos = result.docs.map(item => ({ ...item.data(),\n    docId: item.id\n  }));\n  const photosWithUserDetails = await Promise.all(userFollowedPhotos.map(async photo => {\n    let userLikedPhoto = false;\n\n    if (photo.likes.includes(userId)) {\n      userLikedPhoto = true;\n    }\n\n    const user = await getUserByUserId(photo.userId);\n    const username = user[0].username;\n    return {\n      username,\n      ...photo,\n      userLikedPhoto\n    };\n  }));\n  return photosWithUserDetails;\n}\nexport async function getSuggestedProfiles(userId) {\n  const result = await firebase.firestore().collection(\"users\").limit(10).get();\n  const [{\n    following\n  }] = await getUserByUserId(userId);\n  return result.docs.map(user => ({ ...user.data(),\n    docId: user.id\n  })).filter(profile => profile.userId !== userId && !following.includes(profile.userId));\n}\nexport async function updateUserFollowing(docId, profileId, isFollowingProfile) {\n  return firebase.firestore().collection(\"users\").doc(docId).update({\n    following: isFollowingProfile ? FieldValue.arrayRemove(profileId) : FieldValue.arrayUnion(profileId)\n  });\n}\nexport async function updateFollowedUserFollowers(docId, followingUserId, isFollowingProfile) {\n  return firebase.firestore().collection(\"users\").doc(docId).update({\n    following: isFollowingProfile ? FieldValue.arrayRemove(followingUserId) : FieldValue.arrayUnion(followingUserId)\n  });\n}\nexport async function getUserByUsername(username) {\n  const result = await firebase.firestore().collection(\"users\").where(\"username\", \"==\", username).get();\n  const user = result.docs.map(item => ({ ...item.data(),\n    docId: item.id\n  }));\n  return user.length > 0 ? user : false;\n}\nexport async function getUserIdByUsername(username) {\n  const result = await firebase.firestore().collection(\"users\").where(\"username\", \"==\", username).get();\n  const [{\n    userId = null\n  }] = result.docs.map(item => ({ ...item.data()\n  }));\n  return userId;\n}\nexport async function getUserPhotosByUsername(username) {\n  const userId = await getUserIdByUsername(username);\n  const result = await firebase.firestore().collection(\"photos\").where(\"userId\", \"==\", userId).get();\n  const photos = result.docs.map(item => ({ ...item.data(),\n    docId: item.id\n  }));\n  return photos;\n}\nexport async function toggleFollow(isFollowingProfile, activeUserDocId, profileDocId, profileId, followingUserId) {\n  await updateUserFollowing(activeUserDocId, profileId, isFollowingProfile);\n  await updateFollowedUserFollowers(profileDocId, followingUserId, isFollowingProfile);\n}","map":{"version":3,"sources":["/Users/vijayabalaji/Desktop/challenges/Instagram/instagram/src/services/firebase.js"],"names":["firebase","FieldValue","isUserFollowingProfile","activeUsername","profileUserId","result","firestore","collection","where","get","response","docs","map","item","data","docId","id","fullName","doesUsernameExist","username","user","length","getUserByUserId","userId","getUserFollowedPhotos","followingUserIds","userFollowedPhotos","photosWithUserDetails","Promise","all","photo","userLikedPhoto","likes","includes","getSuggestedProfiles","limit","following","filter","profile","updateUserFollowing","profileId","isFollowingProfile","doc","update","arrayRemove","arrayUnion","updateFollowedUserFollowers","followingUserId","getUserByUsername","getUserIdByUsername","getUserPhotosByUsername","photos","toggleFollow","activeUserDocId","profileDocId"],"mappings":"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","sourcesContent":["import { firebase, FieldValue } from \"../lib/firebase\";\n\nexport async function isUserFollowingProfile(activeUsername, profileUserId) {\n  const result = await firebase\n    .firestore()\n    .collection(\"users\")\n    .where(\"username\", \"==\", activeUsername) // karl (active logged in user)\n    .where(\"following\", \"array-contains\", profileUserId)\n    .get();\n\n  const [response = {}] = result.docs.map((item) => ({\n    ...item.data(),\n    docId: item.id,\n  }));\n\n  return !!response.fullName;\n}\n\nexport async function doesUsernameExist(username) {\n  const result = await firebase\n    .firestore()\n    .collection(\"users\")\n    .where(\"username\", \"==\", username)\n    .get();\n\n  return result.docs.map((user) => user.data().length > 0);\n}\n\nexport async function getUserByUserId(userId) {\n  const result = await firebase\n    .firestore()\n    .collection(\"users\")\n    .where(\"userId\", \"==\", userId)\n    .get();\n\n  const user = result.docs.map((item) => ({\n    ...item.data(),\n    docId: item.id,\n  }));\n\n  return user;\n}\n\nexport async function getUserFollowedPhotos(userId, followingUserIds) {\n  const result = await firebase\n    .firestore()\n    .collection(\"photos\")\n    .where(\"userId\", \"in\", followingUserIds)\n    .get();\n\n  const userFollowedPhotos = result.docs.map((item) => ({\n    ...item.data(),\n    docId: item.id,\n  }));\n\n  const photosWithUserDetails = await Promise.all(\n    userFollowedPhotos.map(async (photo) => {\n      let userLikedPhoto = false;\n      if (photo.likes.includes(userId)) {\n        userLikedPhoto = true;\n      }\n      const user = await getUserByUserId(photo.userId);\n      const username = user[0].username;\n      return { username, ...photo, userLikedPhoto };\n    })\n  );\n\n  return photosWithUserDetails;\n}\n\nexport async function getSuggestedProfiles(userId) {\n  const result = await firebase.firestore().collection(\"users\").limit(10).get();\n  const [{ following }] = await getUserByUserId(userId);\n\n  return result.docs\n    .map((user) => ({ ...user.data(), docId: user.id }))\n    .filter(\n      (profile) =>\n        profile.userId !== userId && !following.includes(profile.userId)\n    );\n}\n\nexport async function updateUserFollowing(\n  docId,\n  profileId,\n  isFollowingProfile\n) {\n  return firebase\n    .firestore()\n    .collection(\"users\")\n    .doc(docId)\n    .update({\n      following: isFollowingProfile\n        ? FieldValue.arrayRemove(profileId)\n        : FieldValue.arrayUnion(profileId),\n    });\n}\n\nexport async function updateFollowedUserFollowers(\n  docId,\n  followingUserId,\n  isFollowingProfile\n) {\n  return firebase\n    .firestore()\n    .collection(\"users\")\n    .doc(docId)\n    .update({\n      following: isFollowingProfile\n        ? FieldValue.arrayRemove(followingUserId)\n        : FieldValue.arrayUnion(followingUserId),\n    });\n}\n\nexport async function getUserByUsername(username) {\n  const result = await firebase\n    .firestore()\n    .collection(\"users\")\n    .where(\"username\", \"==\", username)\n    .get();\n\n  const user = result.docs.map((item) => ({\n    ...item.data(),\n    docId: item.id,\n  }));\n\n  return user.length > 0 ? user : false;\n}\n\nexport async function getUserIdByUsername(username) {\n  const result = await firebase\n    .firestore()\n    .collection(\"users\")\n    .where(\"username\", \"==\", username)\n    .get();\n\n  const [{ userId = null }] = result.docs.map((item) => ({\n    ...item.data(),\n  }));\n\n  return userId;\n}\n\nexport async function getUserPhotosByUsername(username) {\n  const userId = await getUserIdByUsername(username);\n  const result = await firebase\n    .firestore()\n    .collection(\"photos\")\n    .where(\"userId\", \"==\", userId)\n    .get();\n\n  const photos = result.docs.map((item) => ({\n    ...item.data(),\n    docId: item.id,\n  }));\n\n  return photos;\n}\n\nexport async function toggleFollow(\n  isFollowingProfile,\n  activeUserDocId,\n  profileDocId,\n  profileId,\n  followingUserId\n) {\n  await updateUserFollowing(activeUserDocId, profileId, isFollowingProfile);\n  await updateFollowedUserFollowers(\n    profileDocId,\n    followingUserId,\n    isFollowingProfile\n  );\n}\n"]},"metadata":{},"sourceType":"module"}